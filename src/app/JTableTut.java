/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package app;

import com.opencsv.CSVReader;
import java.awt.List;
import java.io.File;
import java.io.FileFilter;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JTable;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;


/**
 *
 * @author Danial
 */
public class JTableTut extends javax.swing.JFrame {

    private File openedFile; 
    private String[] header;
    private Vector<Vector<String>> data = new Vector<>(); 
    private Vector headerVec = new Vector();
    private boolean loaded = false; 
    private File outputFile; 
    
    /**
     * Creates new form JTableTut
     */
    public JTableTut() {        
        initComponents();
       
    }
    
    
    
    
    
 
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        fileExplorer = new javax.swing.JFileChooser();
        parentTabPane = new javax.swing.JTabbedPane();
        sourceTab = new javax.swing.JPanel();
        fileNameTextField = new javax.swing.JTextField();
        browseFileExplorerButton = new javax.swing.JButton();
        selectFile = new javax.swing.JButton();
        columnComboBox = new javax.swing.JComboBox<>();
        displayButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        csvTable = new javax.swing.JTable(){
            public boolean isCellEditable(int row, int column) {
                return false;
            };
        };
        jScrollPane2 = new javax.swing.JScrollPane();
        jWorkingTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        algorithmTab = new javax.swing.JPanel();
        algTabPane = new javax.swing.JTabbedPane();
        supervisedTab = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        selectLabel = new javax.swing.JLabel();
        superList = new javax.swing.JComboBox<>();
        cardStack = new javax.swing.JPanel();
        kmeansPanel = new javax.swing.JPanel();
        configLabel = new javax.swing.JLabel();
        clusterLabel = new javax.swing.JLabel();
        iterLabel = new javax.swing.JLabel();
        numClustersTextField = new javax.swing.JTextField();
        numIterationsTextField = new javax.swing.JTextField();
        generateButton = new javax.swing.JButton();
        outputLabel = new javax.swing.JLabel();
        outputFileTextField = new javax.swing.JTextField();
        unsupervisedTab = new javax.swing.JPanel();
        codeTab = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        generatedScalaTextArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        fileNameTextField.setEditable(false);
        fileNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileNameTextFieldActionPerformed(evt);
            }
        });

        browseFileExplorerButton.setText("Browse");
        browseFileExplorerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseFileExplorerButtonActionPerformed(evt);
            }
        });

        selectFile.setText("Select");
        selectFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectFileActionPerformed(evt);
            }
        });

        displayButton.setText("Display");
        displayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayButtonActionPerformed(evt);
            }
        });

        jLabel4.setText("Column:");

        csvTable.setModel(new javax.swing.table.DefaultTableModel(
            data,
            headerVec
        ));
        csvTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane3.setViewportView(csvTable);

        jWorkingTable.setModel(new javax.swing.table.DefaultTableModel(
            data,
            headerVec
        ));
        jScrollPane2.setViewportView(jWorkingTable);

        jButton1.setText("Add Selected Rows");

        jButton2.setText("Remove Selected Rows");

        javax.swing.GroupLayout sourceTabLayout = new javax.swing.GroupLayout(sourceTab);
        sourceTab.setLayout(sourceTabLayout);
        sourceTabLayout.setHorizontalGroup(
            sourceTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sourceTabLayout.createSequentialGroup()
                .addGroup(sourceTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(sourceTabLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(sourceTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(sourceTabLayout.createSequentialGroup()
                                .addComponent(browseFileExplorerButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(fileNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 583, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(sourceTabLayout.createSequentialGroup()
                                .addGap(677, 677, 677)
                                .addComponent(selectFile)))
                        .addGap(314, 314, 314))
                    .addGroup(sourceTabLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3)
                        .addGap(18, 18, 18)
                        .addGroup(sourceTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addGap(18, 18, 18)
                .addGroup(sourceTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(sourceTabLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(columnComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(displayButton)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 695, Short.MAX_VALUE))
                .addContainerGap())
        );
        sourceTabLayout.setVerticalGroup(
            sourceTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sourceTabLayout.createSequentialGroup()
                .addGroup(sourceTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(sourceTabLayout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(sourceTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fileNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(browseFileExplorerButton)
                            .addComponent(selectFile)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, sourceTabLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(sourceTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(displayButton)
                            .addComponent(columnComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))))
                .addGroup(sourceTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, sourceTabLayout.createSequentialGroup()
                        .addGap(210, 210, 210)
                        .addComponent(jButton1)
                        .addGap(77, 77, 77)
                        .addComponent(jButton2))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, sourceTabLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(sourceTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 619, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 619, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        parentTabPane.addTab("Source and Datasets", sourceTab);

        jLabel1.setText("Enter desired configurations:");

        selectLabel.setText("Select an algorithm:");

        superList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "K-Means", "Test Algorithm 2", "Test Algorithm 3" }));
        superList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                superListActionPerformed(evt);
            }
        });

        cardStack.setPreferredSize(new java.awt.Dimension(400, 450));
        cardStack.setLayout(new java.awt.CardLayout());

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, cardStack, org.jdesktop.beansbinding.ObjectProperty.create(), kmeansPanel, org.jdesktop.beansbinding.BeanProperty.create("background"));
        bindingGroup.addBinding(binding);

        configLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        configLabel.setText("Configurations");

        clusterLabel.setText("Clusters:");

        iterLabel.setText("Iterations:");

        generateButton.setText("Generate");
        generateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateButtonActionPerformed(evt);
            }
        });

        outputLabel.setText("Output File:");

        javax.swing.GroupLayout kmeansPanelLayout = new javax.swing.GroupLayout(kmeansPanel);
        kmeansPanel.setLayout(kmeansPanelLayout);
        kmeansPanelLayout.setHorizontalGroup(
            kmeansPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kmeansPanelLayout.createSequentialGroup()
                .addComponent(configLabel)
                .addGap(0, 219, Short.MAX_VALUE))
            .addGroup(kmeansPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(kmeansPanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(kmeansPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(generateButton)
                        .addGroup(kmeansPanelLayout.createSequentialGroup()
                            .addGroup(kmeansPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(clusterLabel)
                                .addComponent(iterLabel)
                                .addComponent(outputLabel))
                            .addGap(36, 36, 36)
                            .addGroup(kmeansPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(outputFileTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(numIterationsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(numClustersTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        kmeansPanelLayout.setVerticalGroup(
            kmeansPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kmeansPanelLayout.createSequentialGroup()
                .addComponent(configLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 413, Short.MAX_VALUE))
            .addGroup(kmeansPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(kmeansPanelLayout.createSequentialGroup()
                    .addGap(94, 94, 94)
                    .addGroup(kmeansPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(clusterLabel)
                        .addComponent(numClustersTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(41, 41, 41)
                    .addGroup(kmeansPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(iterLabel)
                        .addComponent(numIterationsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(34, 34, 34)
                    .addGroup(kmeansPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(outputLabel)
                        .addComponent(outputFileTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(33, 33, 33)
                    .addComponent(generateButton)
                    .addContainerGap(153, Short.MAX_VALUE)))
        );

        cardStack.add(kmeansPanel, "kmeansCard");

        javax.swing.GroupLayout supervisedTabLayout = new javax.swing.GroupLayout(supervisedTab);
        supervisedTab.setLayout(supervisedTabLayout);
        supervisedTabLayout.setHorizontalGroup(
            supervisedTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(supervisedTabLayout.createSequentialGroup()
                .addContainerGap(447, Short.MAX_VALUE)
                .addComponent(selectLabel)
                .addGap(18, 18, 18)
                .addComponent(superList, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(205, 205, 205)
                .addComponent(jLabel1)
                .addGap(27, 27, 27)
                .addComponent(cardStack, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(369, 369, 369))
        );
        supervisedTabLayout.setVerticalGroup(
            supervisedTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(supervisedTabLayout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addGroup(supervisedTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cardStack, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(supervisedTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(selectLabel)
                        .addComponent(superList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1)))
                .addContainerGap(173, Short.MAX_VALUE))
        );

        algTabPane.addTab("Supervised Algorithms", supervisedTab);

        javax.swing.GroupLayout unsupervisedTabLayout = new javax.swing.GroupLayout(unsupervisedTab);
        unsupervisedTab.setLayout(unsupervisedTabLayout);
        unsupervisedTabLayout.setHorizontalGroup(
            unsupervisedTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        unsupervisedTabLayout.setVerticalGroup(
            unsupervisedTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        algTabPane.addTab("Unsupervised Algorithms", unsupervisedTab);

        javax.swing.GroupLayout algorithmTabLayout = new javax.swing.GroupLayout(algorithmTab);
        algorithmTab.setLayout(algorithmTabLayout);
        algorithmTabLayout.setHorizontalGroup(
            algorithmTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(algTabPane)
        );
        algorithmTabLayout.setVerticalGroup(
            algorithmTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(algTabPane)
        );

        parentTabPane.addTab("Algorithm Selection and Configurations", algorithmTab);

        generatedScalaTextArea.setColumns(20);
        generatedScalaTextArea.setRows(5);
        jScrollPane1.setViewportView(generatedScalaTextArea);

        javax.swing.GroupLayout codeTabLayout = new javax.swing.GroupLayout(codeTab);
        codeTab.setLayout(codeTabLayout);
        codeTabLayout.setHorizontalGroup(
            codeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, codeTabLayout.createSequentialGroup()
                .addContainerGap(290, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1232, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(265, 265, 265))
        );
        codeTabLayout.setVerticalGroup(
            codeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(codeTabLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 630, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(44, Short.MAX_VALUE))
        );

        parentTabPane.addTab("Generated Code", codeTab);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(parentTabPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(parentTabPane))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void displayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayButtonActionPerformed
        if (!loaded) {
            System.out.println("Please select a file"); 
        }
        else {
            int colIndex = columnComboBox.getSelectedIndex();
            printColumnData(header, data, colIndex);
        }
        
        
    }//GEN-LAST:event_displayButtonActionPerformed

    private void browseFileExplorerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseFileExplorerButtonActionPerformed
        //fileExplorer.addChoosableFileFilter(new FileNameExtensionFilter("CSV Files", "csv"));
        fileExplorer.setAcceptAllFileFilterUsed(false);
        fileExplorer.setFileFilter(new FileNameExtensionFilter("CSV Files", "csv"));

        int returnVal = fileExplorer.showOpenDialog(JTableTut.this);
        //TODO: Verify for only a .csv file
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            openedFile = fileExplorer.getSelectedFile();
            fileNameTextField.setText(openedFile.getAbsolutePath());
            System.out.println("User chose: " + openedFile.getName());
            loaded = true; 
        } else {
            System.out.println("User clicked cancelled");
        }
    }//GEN-LAST:event_browseFileExplorerButtonActionPerformed

    private void selectFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectFileActionPerformed
        if (!loaded) {
            System.out.println("Please select file."); 
        } else {
            String fileName = openedFile.getAbsolutePath();
            saveData(fileName);
            loaded = true;
        }                                  
        
    }//GEN-LAST:event_selectFileActionPerformed
    
    
    private void fileNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fileNameTextFieldActionPerformed

    private void RemoveButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveButActionPerformed
       String name = RemoveColTF.getText(); //Text field
      int i = Integer.parseInt(name);
       DefaultTableModel model = (DefaultTableModel)csvTable.getModel();
       TableColumnModel columnModel = csvTable.getColumnModel();
       csvTable.removeColumn(csvTable.getColumnModel().getColumn(i));
    }//GEN-LAST:event_RemoveButActionPerformed

    private void superListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_superListActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_superListActionPerformed

    private void generateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateButtonActionPerformed
        int numClusters = Integer.parseInt(numClustersTextField.getText());
        int numIterations = Integer.parseInt(numIterationsTextField.getText());
        if (!loaded) {
            generatedScalaTextArea.setText("Please select a file");
        }
        else {
            int colIndex = columnComboBox.getSelectedIndex();
            if(numClusters <= 0){
                generatedScalaTextArea.append("NUMBER OF CLUSTERS CANNOT BE 0 OR LESS.");
            }
            else if(numIterations <= 0){
                generatedScalaTextArea.append("NUMBER OF ITERATIONS CANNOT BE 0 OR LESS.");
            }
            else{
                String outputFileName = outputFileTextField.getText();
                createFile(colIndex, outputFileName);
                generateScalaCode(numClusters, numIterations);
            }
        }
    }//GEN-LAST:event_generateButtonActionPerformed
	
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JTableTut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JTableTut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JTableTut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JTableTut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JTableTut().setVisible(true);
            }
        });
    }
    
    public void saveData(String fileName) {
        if (loaded == true) {
            header = null;
            data.clear();
            headerVec.clear();
        } 
        
        String[] row = null;
        
        int rowCounter = 0; 
        
        try {
            CSVReader reader = new CSVReader(new FileReader(fileName)); 
            header = reader.readNext();
            
            for (String col: header) {
                headerVec.add(col.toUpperCase());
            }
            
            while((row = reader.readNext()) != null) {
                data.add(new Vector<String>());
                for(int i =0; i < row.length; i++) {
                    data.get(rowCounter).add(row[i]); 
                }
                rowCounter++; 
            }
            reader.close(); 
            
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(JTableTut.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(JTableTut.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        printColumnData(header, data, 0); 
        updateComboBox(header);
    }
    

    public void printColumnData(String[] header, Vector<Vector<String>> data, int colNumber) {

        csvTable.setModel(new javax.swing.table.DefaultTableModel(
                data,
                headerVec));
        
    }
    

    
    public void updateComboBox(String[] header) {
        for (String x: header) {
            columnComboBox.addItem(x.toUpperCase()); 
        }
    }
    
    public void createFile(int colIndex, String outputFileName) {
        try { 
            outputFile = new File(outputFileName + ".txt");
            PrintWriter writer = new PrintWriter(outputFile); 
            for(int i = 0; i < data.size(); i++) {
                writer.println(data.get(i).get(colIndex));
            }
            writer.close(); 
        } catch (FileNotFoundException ex) {
            Logger.getLogger(JTableTut.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void generateScalaCode(int clu, int ite) {
        String generatedCode; 
        String path = outputFile.getAbsolutePath().replaceAll("\\\\", "/");
        
        generatedCode = "import org.apache.spark.mllib.clustering.{KMeans, KMeansModel}\n" +
                "\nimport org.apache.spark.mllib.linalg.Vectors\n\n" +
                "val data = sc.textFile(\"" + path + "\")\n" +
                "val parsedData = data.map(s => Vectors.dense(s.split(' ').map(_.toDouble))).cache()\n\n" +
                "val numClusters = " + clu + "\n" +
                "val numIterations = " + ite + "\n" +
                "val clusters = KMeans.train(parsedData, numClusters, numIterations)\n\n" +
                "val WSSE = clusters.computeCost(parsedData)\n" +
                "println(\"Within Set Sum of Squared Errors = \" + WSSE)\n" + 
                "clusters.save(sc, \"myModelPath\")\n" +
                "val sameModel = KMeansModel.load(sc, \"myModelPath\")\n\n";
        
        generatedScalaTextArea.setText(generatedCode); 
    }
   
       

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane algTabPane;
    private javax.swing.JPanel algorithmTab;
    private javax.swing.JButton browseFileExplorerButton;
    private javax.swing.JPanel cardStack;
    private javax.swing.JLabel clusterLabel;
    private javax.swing.JPanel codeTab;
    private javax.swing.JComboBox<String> columnComboBox;
    private javax.swing.JLabel configLabel;
    private javax.swing.JTable csvTable;
    private javax.swing.JButton displayButton;
    private javax.swing.JFileChooser fileExplorer;
    private javax.swing.JTextField fileNameTextField;
    private javax.swing.JButton generateButton;
    private javax.swing.JTextArea generatedScalaTextArea;
    private javax.swing.JLabel iterLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jWorkingTable;
    private javax.swing.JPanel kmeansPanel;
    private javax.swing.JTextField numClustersTextField;
    private javax.swing.JTextField numIterationsTextField;
    private javax.swing.JTextField outputFileTextField;
    private javax.swing.JLabel outputLabel;
    private javax.swing.JTabbedPane parentTabPane;
    private javax.swing.JButton selectFile;
    private javax.swing.JLabel selectLabel;
    private javax.swing.JPanel sourceTab;
    private javax.swing.JComboBox<String> superList;
    private javax.swing.JPanel supervisedTab;
    private javax.swing.JPanel unsupervisedTab;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
        
}

