/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package app;

import com.opencsv.CSVReader;
import java.awt.List;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;

/**
 *
 * @author Danial
 */
public class JTableTut extends javax.swing.JFrame {

    private File openedFile; 
    private String[] header;
    private ArrayList<ArrayList<String>> data = new ArrayList<>(); 
    private boolean loaded = false; 
    private File outputFile; 
    
    /**
     * Creates new form JTableTut
     */
    public JTableTut() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileExplorer = new javax.swing.JFileChooser();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        fileNameTextField = new javax.swing.JTextField();
        selectFile = new javax.swing.JButton();
        browseFileExplorerButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        columnTextArea = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        numClustersTextField = new javax.swing.JTextField();
        numIterationsTextField = new javax.swing.JTextField();
        columnComboBox = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        generatedScalaTextArea = new javax.swing.JTextArea();
        generateButton = new javax.swing.JButton();
        displayButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        outputFileTextField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        fileNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileNameTextFieldActionPerformed(evt);
            }
        });

        selectFile.setText("Select");
        selectFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectFileActionPerformed(evt);
            }
        });

        browseFileExplorerButton.setText("Browse");
        browseFileExplorerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseFileExplorerButtonActionPerformed(evt);
            }
        });

        columnTextArea.setColumns(20);
        columnTextArea.setRows(5);
        jScrollPane2.setViewportView(columnTextArea);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Configurations");

        jLabel2.setText("Clusters:");

        jLabel3.setText("Iterations:");

        columnComboBox.setModel(new javax.swing.DefaultComboBoxModel<>());

        jLabel4.setText("Column:");

        generatedScalaTextArea.setColumns(20);
        generatedScalaTextArea.setRows(5);
        jScrollPane1.setViewportView(generatedScalaTextArea);

        generateButton.setText("Generate");
        generateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateButtonActionPerformed(evt);
            }
        });

        displayButton.setText("Display");
        displayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayButtonActionPerformed(evt);
            }
        });

        jLabel5.setText("Output File:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(generateButton)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                                    .addComponent(numClustersTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jLabel1)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel4)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(columnComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel5))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(numIterationsTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                                        .addComponent(outputFileTextField))))
                            .addComponent(displayButton)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(browseFileExplorerButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fileNameTextField)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(selectFile)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 604, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fileNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(selectFile)
                    .addComponent(browseFileExplorerButton))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 630, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 630, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(columnComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(displayButton)
                        .addGap(80, 80, 80)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(numClustersTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(numIterationsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(outputFileTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(generateButton)))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("K-Means Clustering", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fileNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fileNameTextFieldActionPerformed

    private void selectFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectFileActionPerformed
        String fileName = openedFile.getAbsolutePath();
        saveData(fileName);       
        loaded = true; 
    }//GEN-LAST:event_selectFileActionPerformed

    private void browseFileExplorerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseFileExplorerButtonActionPerformed
        int returnVal = fileExplorer.showOpenDialog(JTableTut.this); 
        //TODO: Verify for only a .csv file
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            openedFile = fileExplorer.getSelectedFile();
            fileNameTextField.setText(openedFile.getAbsolutePath()); 
            System.out.println("User chose: " + openedFile.getName()); 
        } else {
            System.out.println("User clicked cancelled"); 
        }
    }//GEN-LAST:event_browseFileExplorerButtonActionPerformed

    private void displayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayButtonActionPerformed
        if (!loaded) {            
            columnTextArea.setText("Please select a file");
        }
        else {
            int colIndex = columnComboBox.getSelectedIndex();
            printColumnData(header, data, colIndex); 
        }
    }//GEN-LAST:event_displayButtonActionPerformed

    private void generateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateButtonActionPerformed
        if (!loaded) {
            generatedScalaTextArea.setText("Please select a file"); 
        }
        else {
            int colIndex = columnComboBox.getSelectedIndex(); 
            //TODO: Add error checking to these
            int numClusters = getClusters(); 
            int numIterations = getIterations(); 
            String outputFileName = outputFileTextField.getText(); 
            
            createFile(colIndex, outputFileName); 
            generateScalaCode(numClusters, numIterations); 
        }
    }//GEN-LAST:event_generateButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JTableTut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JTableTut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JTableTut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JTableTut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JTableTut().setVisible(true);
            }
        });
    }
    
    public void saveData(String fileName) {
        String[] row = null;
        
        int rowCounter = 0; 
        
        
        columnTextArea.setText(""); 
        try {
            CSVReader reader = new CSVReader(new FileReader(fileName)); 
            header = reader.readNext();
            
            for (String col: header) {
                columnTextArea.append(col.toUpperCase() + "   "); 
            }
            
            columnTextArea.append("\n"); 
            
            while((row = reader.readNext()) != null) {
                data.add(new ArrayList<String>());
                for(int i =0; i < row.length; i++) {
                    data.get(rowCounter).add(row[i]); 
                }
                rowCounter++; 
            }
            reader.close(); 
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        //printAllData(data);
        printColumnData(header, data, 0); 
        updateComboBox(header);
    }
    
    public void printAllData(ArrayList<ArrayList<String>> data) {
        for (int i=0; i<data.size(); i++) {
           for (int j=0; j<data.get(i).size(); j++) {
               columnTextArea.append(data.get(i).get(j) + "    ");
           }
           columnTextArea.append("\n"); 
        }
    }
    
    public void printColumnData(String[] header, ArrayList<ArrayList<String>> data, int colNumber) {
        columnTextArea.setText(header[colNumber].toUpperCase() + "\n"); 
        for (int i = 0; i < data.size(); i++) {
            columnTextArea.append(data.get(i).get(colNumber) + "\n"); 
        }
    }
    
    public void updateComboBox(String[] header) {
        for (String x: header) {
            columnComboBox.addItem(x.toUpperCase()); 
        }
    }
    
    public void createFile(int colIndex, String outputFileName) {
        try { 
            outputFile = new File(outputFileName + ".txt");
            PrintWriter writer = new PrintWriter(outputFile); 
            for(int i = 0; i < data.size(); i++) {
                writer.println(data.get(i).get(colIndex));
            }
            writer.close(); 
        } catch (FileNotFoundException ex) {
            Logger.getLogger(JTableTut.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void generateScalaCode(int clu, int ite) {
        String generatedCode; 
        
        generatedCode = "import org.apache.spark.mllib.clustering.{KMeans, KMeansModel}\n" +
                "\nimport org.apache.spark.mllib.linalg.Vectors\n\n" +
                "val data = sc.textFile(" + outputFile.getAbsolutePath() + ")\n" +
                "val parsedData = data.map(s => Vectors.dense(s.split(' ').map(_.toDouble))).cache()\n\n" +
                "val numClusters = " + clu + "\n" +
                "val numIterations = " + ite + "\n" +
                "val clusters = KMeans.train(parsedData, numClusters, numIterations)\n\n" +
                "val WSSE = clusters.computeCost(parsedData)\n" +
                "println(\"Within Set Sum of Squared Errors = \" + WSSE\n" + 
                "clusters.save(sc, \"myModelPath\")\n" +
                "val sameModel = KMeansModel.load(sc, \"myModelPath\")\n\n";
        
        generatedScalaTextArea.setText(generatedCode); 
    }
    
    public int getClusters(){
       int clusters = Integer.parseInt(numClustersTextField.getText());
       if(clusters <= 0){
           return clusters;
       }
       else{
           generatedScalaTextArea.append("NUMBER OF CLUSTERS CANNOT BE 0 OR FEWER!");
       }
       return -1;
    }
    
    public int getIterations(){
       int clusters = Integer.parseInt(numClustersTextField.getText());
       if(clusters <= 0){
           return clusters;
       }
       else{
           generatedScalaTextArea.append("NUMBER OF ITERATIONS CANNOT BE 0 OR FEWER!");
       }
       return -1;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton browseFileExplorerButton;
    private javax.swing.JComboBox<String> columnComboBox;
    private javax.swing.JTextArea columnTextArea;
    private javax.swing.JButton displayButton;
    private javax.swing.JFileChooser fileExplorer;
    private javax.swing.JTextField fileNameTextField;
    private javax.swing.JButton generateButton;
    private javax.swing.JTextArea generatedScalaTextArea;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField numClustersTextField;
    private javax.swing.JTextField numIterationsTextField;
    private javax.swing.JTextField outputFileTextField;
    private javax.swing.JButton selectFile;
    // End of variables declaration//GEN-END:variables
}
